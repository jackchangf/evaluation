{"version":3,"sources":["./src/app/eval/eval.component.ts","./src/app/eval/eval.component.html","./src/app/common/common.global.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { myForm } from '../app.model';\nimport { HttpClient } from \"@angular/common/http\"\nimport * as _ from \"lodash\"; //* means import all, it is old js framework\nimport { Global } from '../common/common.global';\n\n@Component({\n  selector: 'app-eval',\n  templateUrl: './eval.component.html',\n  styleUrls: ['./eval.component.css']\n})\nexport class EvalComponent implements OnInit {\n\n  title = 'FormClientApp';\n  formObj: myForm = new myForm(); //binded with UI\n  formList: Array<myForm> = new Array<myForm>(); //collection\n\n  ngOnInit(): void {\n    this.GetfromServer();\n  }\n\n\n  //dependancy injection instead of using httpObj:HttpClient = new HttpClient()\n  constructor(public httpObj: HttpClient, public globalObj: Global) {\n\n  }\n\n\n  AddtoServer() {\n    //=====to solve circular json error======\n    //need to use dto data transfer object, basically we passing formgroup in addition to the id,name,address to mvc and mvc doesn't know what is formgroup. so we create a new dto object that copies the id,name and address only,then in the observable post, we pass this formdto instead of this.formObj\n    // var formdto: any = {};\n    // formdto.address = this.formObj.address;\n    // formdto.customerName = this.formObj.customerName;\n    // formdto.id = this.formObj.id;\n    // formdto.products = this.formObj.products; //pass the products list from formObj to formdto to send to server\n\n    var formdto: any = _.omit(this.formObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    // var formdto:any = {\n    //   Id : this.formObj.Id,\n    //   customerName : this.formObj.customerName,\n    //   address : this.formObj.address\n    // };\n\n    //we need to make call to mvc domain https://localhost:44301/\n    // var observable = this.httpObj\n    //   .post(\"https://localhost:44301/Customer/Add\", formdto); //formdto instead of this.formObj to not include formgroup to mvc as mvc doesn't know what is formgroup\n\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .post(this.globalObj.formUrl, formdto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n  SuccessObserver(res: any) { //res is just a variable, data type any\n    // for (let element of res) {\n    //   var cust: Customer = new Customer();\n    //   cust.id = element.id;\n    //   cust.address = element.address;\n    //   cust.customerName = element.customerName;\n    //   cust.products = element.products\n    //   this.formList.push(cust);\n    // };\n\n\n    this.formList = res; //moved on top\n    this.formObj = new myForm();\n  }\n\n  ErrorObserver(res: any) {\n    // for (let i = 0; i < res.error.length; i++) {\n    //   this.errorList.push(res.error[i].errorMessage)\n    // }\n    //this.errorM = JSON.stringify(res.message);\n    // this.errorList.push(res.error[0].errorMessage);\n    // this.errorList.push(res.error[1].errorMessage);\n  }\n\n\n  GetfromServer() {\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.formUrl);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n\n  SearchfromServer(customerName: string) { //search by name instead of id\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.formUrl + customerName);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  EditInServer() {\n    // var formdto: any = {};\n    // formdto.address = this.formObj.address;\n    // formdto.customerName = this.formObj.customerName;\n    // formdto.id = this.formObj.id;\n\n    var formdto: any = _.omit(this.formObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    var observable = this.httpObj\n      .put(this.globalObj.formUrl + formdto.id, formdto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  DeleteInServer(id: number) {\n\n    var observable = this.httpObj\n      .delete(this.globalObj.formUrl + id);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  //used for edit to display the customer obj response we get from server, create a new customer obj with a formgroup, then display to the angular UI\n  Select(selected: myForm) {\n    this.formObj = new myForm();\n    this.formObj.id = selected.id;\n    this.formObj.EmployeeName = selected.EmployeeName;\n    this.formObj.EmployeeCode = selected.EmployeeCode;\n    this.formObj.Department = selected.Department;\n    this.formObj.Designation = selected.Designation;\n    this.formObj.CourseCode = selected.CourseCode;\n    this.formObj.CourseName = selected.CourseName;\n    this.formObj.CourseStart = selected.CourseStart;\n    this.formObj.CourseEnd = selected.CourseEnd;\n    this.formObj.Radio1 = selected.Radio1;\n    this.formObj.Answer1 = selected.Answer1;\n    this.formObj.WillRecommend = selected.WillRecommend;\n  }\n\n}\n","<p class = \"center\">eval works!</p>\n\n\n  <div class=\"center\">EVALUATION FORM</div> \n\n\n  <div class=\"bg\">\n    <br>\n  <div class=\"center\">\n      <form [formGroup]=\"formObj.formGroup\">\n        \n        <div class=\"wrapper\">\n          <!-- <label>Id :- </label>\n          <input type=\"text\" [(ngModel)]=\"formObj.id\" [ngModelOptions]=\"{standalone: true}\"> -->\n      \n          <label>Employee Code :- </label>\n          <input type=\"text\" [(ngModel)]=\"formObj.EmployeeCode\" [ngModelOptions]=\"{standalone: true}\" /> \n\n          <label>Employee Name :- </label>\n          <input type=\"text\" [(ngModel)]=\"formObj.EmployeeName\" [ngModelOptions]=\"{standalone: true}\" /> \n      \n          <label>Designation :- </label>\n          <input type=\"text\"  [(ngModel)]=\"formObj.Designation\" [ngModelOptions]=\"{standalone: true}\" /> \n\n          <label>Department :- </label>\n          <input  type=\"text\"  [(ngModel)]=\"formObj.Department\" [ngModelOptions]=\"{standalone: true}\" /> \n\n          <label>Course Code :- </label>\n          <input  type=\"text\" [(ngModel)]=\"formObj.CourseCode\" [ngModelOptions]=\"{standalone: true}\" /> \n\n          <label>Course Name :- </label>\n          <input  type=\"text\" [(ngModel)]=\"formObj.CourseName\" [ngModelOptions]=\"{standalone: true}\" /> \n\n          <label>Course Start :- </label>\n          <input  type=\"text\" [(ngModel)]=\"formObj.CourseStart\" [ngModelOptions]=\"{standalone: true}\" disabled/>\n\n          <label>Course End :- </label>\n          <input type=\"text\" [(ngModel)]=\"formObj.CourseEnd\" [ngModelOptions]=\"{standalone: true}\"  disabled/> \n\n          <label>Radio 1 :- </label>\n          <input  type=\"text\" [(ngModel)]=\"formObj.Radio1\" [ngModelOptions]=\"{standalone: true}\" disabled/> \n\n          <label>Answer 1 :- </label>\n          <input type=\"text\" [(ngModel)]=\"formObj.Answer1\"  [ngModelOptions]=\"{standalone: true}\"disabled/> \n\n          <label>WillRecommend:- </label>\n          <input type=\"text\" [(ngModel)]=\"formObj.WillRecommend\"  [ngModelOptions]=\"{standalone: true}\"disabled/> \n\n        </div>\n        \n  <br>\n        \n  <br>\n\n\n\n        <input (click)=\"AddtoServer()\" type=\"button\" value=\"Add Server\" class=\"btn btn-success\"/>\n        <input type=\"button\" (click)=\"GetfromServer()\" value=\"GetList\" class=\"btn btn-primary\">\n        <input type=\"button\" (click)=\"EditInServer()\" value=\"EditList\" class=\"btn btn-warning\">\n\n      \n    </form>\n  </div>\n  \n            <br>\n            <br>\n      \n\n    <p><strong>Question 1: </strong>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quasi veritatis quis, autem necessitatibus amet harum in incidunt numquam aspernatur quisquam recusandae nobis temporibus animi fugiat eum molestias quo labore quibusdam!</p>\n            <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"formObj.Radio1\" labelPosition='before' >\n                <mat-radio-button [value]=1>Option 1</mat-radio-button>\n                <mat-radio-button [value]=2>Option 2</mat-radio-button>\n                <mat-radio-button [value]=3>Option 3</mat-radio-button>\n                <mat-radio-button [value]=4>Option 4</mat-radio-button>\n              </mat-radio-group>\n              <br>\n              <br>\n\n              <p><strong>Question 2: </strong>Lorem ipsum dolor sit, amet consectetur adipisicing elit.</p>\n              <input type=\"text\" [(ngModel)]=\"formObj.Answer1\"  [ngModelOptions]=\"{standalone: true}\"/> \n\n              <br>\n              <br>\n\n              <mat-checkbox [(ngModel)]=\"formObj.WillRecommend\"> <strong> Will Recommend?</strong></mat-checkbox>\n              {{formObj.WillRecommend}}\n\n              <br>\n              <br>\n\n              <p><strong>Course Start Date</strong></p>\n              <mat-form-field appearance=\"fill\" >\n                <mat-label>Choose a date</mat-label>\n                <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"formObj.CourseStart\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n\n              <br>\n              <br>\n\n              <p><strong>Course End Date</strong></p>\n              <mat-form-field appearance=\"fill\" >\n                <mat-label>Choose a date</mat-label>\n                <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"formObj.CourseEnd\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                <mat-datepicker #picker1></mat-datepicker>\n              </mat-form-field>\n\n              <br>\n              <br>\n\n\n      <table class=\"table \"> \n        <thead class=\"thead-dark \">\n          <tr>\n          <th>EmployeeCode</th>\n          <th>EmployeeName</th>\n          <th>Designation</th>\n          <th>Department</th>\n          <th>CourseCode</th>\n          <th>CourseName</th>\n          <th>CourseStart</th>\n          <th>CourseEnd</th>\n          <th>Radio1</th>\n          <th>Answer1</th>\n          <th>WillRecommend</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let temp of formList\" class=\"table-primary\">\n          <td>{{temp.EmployeeCode}}</td>\n          <td>{{temp.EmployeeName}}</td>\n          <td>{{temp.Designation}}</td>\n          <td>{{temp.Department}}</td>\n          <td>{{temp.CourseCode}}</td>\n          <td>{{temp.CourseName}}</td>\n          <td>{{temp.CourseStart}}</td>\n          <td>{{temp.CourseEnd}}</td>\n          <td>{{temp.Radio1}}</td>\n          <td>{{temp.Answer1}}</td>\n          <td>{{temp.WillRecommend}}</td>\n          <td><input type=\"button\" (click)=\"Select(temp)\" value=\"edit\" class=\"btn btn-warning\" ></td>\n          <td><input type=\"button\" (click)=\"DeleteInServer(temp.id)\" value=\"delete\" class=\"btn btn-danger\"></td> \n        </tr>\n      </tbody>\n      </table>\n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n\nexport class Global {\n\n  formUrl: string = \"https://localhost:44384/api/FormAPI/\";\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\r\n    NgForm,\r\n    FormGroup,//step1 import these for validations, client side validations\r\n    FormControl,\r\n    Validators,\r\n    FormBuilder,\r\n} from '@angular/forms'\r\n\r\n\r\nexport class myForm {\r\n    id: number = 0;\r\n    EmployeeCode: number = 0;\r\n    EmployeeName: string = \"\";\r\n    Designation: string = \"\";\r\n    Department: string = \"\";\r\n    CourseCode: number = 0;\r\n    CourseName: string = \"\";\r\n    CourseStart: Date = new Date();\r\n    CourseEnd: Date = new Date();\r\n    Radio1: number = 0;\r\n    Answer1: string = \"\";\r\n    WillRecommend: boolean = false;\r\n\r\n    //step 2 create hte instnace for formgroup\r\n    formGroup: FormGroup;\r\n\r\n    constructor() {\r\n        //step 3 use builder to create empty hierachy\r\n        var _builder = new FormBuilder();\r\n        this.formGroup = _builder.group({\r\n            //options: ['1'] //for radio default not working though\r\n        });\r\n\r\n        //step 4 add required validation on customer name\r\n        this.formGroup.addControl(\"formControl\", new FormControl('', Validators.required));\r\n\r\n        var validationcollection = [];\r\n        validationcollection.push(Validators.required);\r\n        validationcollection.push(Validators.pattern(\"^[a-zA-Z]{3,10}$\"));\r\n\r\n        this.formGroup.addControl(\"formNameControl\", new FormControl('', Validators.compose(validationcollection)));\r\n\r\n    }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FormClientApp';\n}\n","\n\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { EvalComponent } from './eval/eval.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { Global } from './common/common.global';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    EvalComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule, //used by angular mat    \n    MatFormFieldModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule\n\n\n\n  ],\n  providers: [Global],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EvalComponent } from './eval/eval.component';\nimport { HomeComponent } from './home/home.component';\n\nexport const routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'eval', component: EvalComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    useHash: true\n  })],\n  // imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}